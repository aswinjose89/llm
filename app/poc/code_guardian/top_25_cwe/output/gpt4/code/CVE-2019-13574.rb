def self.safe_open(path_or_url, ext = nil, options = {})
  raise ArgumentError, "Invalid URL or path" unless path_or_url.is_a?(String)
  options, ext = ext, nil if ext.is_a?(Hash)

  ext ||= if valid_url?(path_or_url)
      File.extname(URI.parse(path_or_url).path)
    elsif File.exist?(path_or_url)
      File.extname(path_or_url)
    end

  ext.sub!(/:.*/, '') # remove potential fake extensions starting with colon

  raise ArgumentError, "Invalid extension" if ext.nil? || ext.empty?

  URI.parse(path_or_url).open('rb', options) do |file|
    read(file, ext)
  end
rescue URI::InvalidURIError
  raise ArgumentError, "Invalid URL format"
end

private

def self.valid_url?(url)
  url =~ /\A#{URI::regexp}\z/
end