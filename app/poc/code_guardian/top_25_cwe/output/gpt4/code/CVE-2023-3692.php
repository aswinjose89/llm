<?php
try {
    $imagesPath = ADMIDIO_PATH . FOLDER_DATA . '/' . $folderName . '/images';

    FileSystemUtils::createDirectoryIfNotExists($imagesPath);

    // Input validation for $folderName to prevent directory traversal
    $folderName = basename($folderName);
    if (!preg_match('/^[a-zA-Z0-9_-]+$/', $folderName)) {
        throw new \RuntimeException('Invalid folder name.');
    }

    // create a filename with a timestamp and a 16 chars secure-random string,
    // so we have a scheme for the filenames and the risk of duplicates is negligible.
    // Format: 20180131-123456_0123456789abcdef.jpg
    $filename = FileSystemUtils::getGeneratedFilename($_FILES['upload']['name']);

    $htmlUrl = SecurityUtils::encodeUrl(ADMIDIO_URL . '/adm_program/system/show_image.php', array('module' => $folderName, 'file' => $filename));

    move_uploaded_file($_FILES['upload']['tmp_name'], $imagesPath . '/' . $filename);
} catch (\RuntimeException $exception) {
    $message = $exception->getMessage();
    $htmlUrl = '';
}

// Ensure that all output is properly escaped to prevent XSS
$message = htmlspecialchars($message, ENT_QUOTES, 'UTF-8');
$htmlUrl = htmlspecialchars($htmlUrl, ENT_QUOTES, 'UTF-8');

// now call CKEditor function and send photo data
echo '<!DOCTYPE html>
<html>
    <body>
        <script type="text/javascript">
            window.parent.CKEDITOR.tools.callFunction('.json_encode($getCKEditorFuncNum).', '.json_encode($htmlUrl).', '.json_encode($message).');
        </script>
    </body>
</html>';



