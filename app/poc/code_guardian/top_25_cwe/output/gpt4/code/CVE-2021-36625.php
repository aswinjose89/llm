
public function update(User $user, $notrigger = 0)
{
    global $langs, $conf;

    $error = 0;

    $this->db->begin();

    // Check parameters
    // ... existing checks here ...

    // More parameter binding
    $params = [
        'ref'                        => $this->ref,
        'label'                      => $this->label,
        'url'                        => $this->url,
        ...
        'owner_address'              => $this->owner_address,
        'currency_code'              => $this->currency_code,
        'comment'                    => $this->comment,
        'ics'                        => $this->ics,
        'ics_transfer'               => $this->ics_transfer,

    ];

    // Using prepared statements rather than concatenation
    $sql = 'UPDATE '.MAIN_DB_PREFIX.'bank_account SET ';
    $sets = [];
    foreach ($params as $field => $value) {
        $sets[] = $field.' = :'.$field;
    }
    $sql .= implode(', ', $sets);
    $sql .= ' WHERE rowid = :rowid';

    $sth = $this->db->prepare($sql);

    // Bind parameters securely
    foreach ($params as $field => &$value) {
        $sth->bindParam(':'.$field, $value);
    }
    $sth->bindParam(':rowid', $this->id, PDO::PARAM_INT);

    // Execute the update with bound parameters
    $sth->execute();

    // ... rest of the code including error checks and commit/rollback ...
}

// Second function with similar changes ...
