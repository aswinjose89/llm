// Save user settings
$('#profile-user-save-settings').click(function() {
    var data = {
        'name': DOMPurify.sanitize($('#profile-user-name').val()),
        'lastname': DOMPurify.sanitize($('#profile-user-lastname').val()),
        'email': DOMPurify.sanitize($('#profile-user-email').val()),
        'timezone': $('#profile-user-timezone').val(),
        'language': $('#profile-user-language').val().toLowerCase(),
        'treeloadstrategy': $('#profile-user-treeloadstrategy').val().toLowerCase(),
        'agsescardid': $('#profile-user-agsescardid').length > 0 ? $('#profile-user-agsescardid').val() : '',
    }
    //console.log(data)
    // Inform user
    toastr.remove();
    toastr.info('<i class="fas fa-cog fa-spin fa-2x"></i>');

    //Send query
    $.post(
        "sources/users.queries.php", {
            type: 'user_profile_update',
            data: prepareExchangedData(JSON.stringify(data), "encode", "<?php echo $_SESSION['key']; ?>"),
            isprofileupdate: true,
            key: "<?php echo $_SESSION['key']; ?>"
        },
        function(data) {
            //decrypt data
            try {
                data = prepareExchangedData(data, "decode", "<?php echo $_SESSION['key']; ?>");
            } catch (e) {
                // error
                toastr.remove();
                toastr.error(
                    'An error appears. Answer from Server cannot be parsed!<br />Returned data:<br />' + data,
                    '', {
                        closeButton: true
                    }
                );
                return false;
            }

            if (data.error === true) {
                toastr.remove();
                toastr.error(
                    data.message,
                    '', {
                        closeButton: true
                    }
                );
            } else {
                $('#profile-username').html(data.name + ' ' + data.lastname);
                $('#profile-user-name').val(data.name)
                $('#profile-user-lastname').val(data.lastname)
                $('#profile-user-email').val(data.email)

                // reload page in case of language change
                if ($('#profile-user-language').val().toLowerCase() !== '<?php echo $_SESSION['user']['user_language'];?>') {
                    // prepare reload
                    $(this).delay(3000).queue(function() {
                        document.location.href = "index.php?page=profile";

                        $(this).dequeue();
                    });

                    // Inform user
                    toastr.remove();
                    toastr.info(
                        '<?php echo langHdl('alert_page_will_reload') . ' ... ' . langHdl('please_wait'); ?>',
                        '', {
                            timeOut: 3000,
                            progressBar: true
                        }
                    );

                } else {
                    // just inform user
                    toastr.remove();
                    toastr.info(
                        '<?php echo langHdl('done'); ?>',
                        '', {
                            timeOut: 2000,
                            progressBar: true
                        }
                    );

                    // Force tree refresh
                    store.update(
                        'teampassApplication',
                        function(teampassApplication) {
                            teampassApplication.jstreeForceRefresh = 1
                        }
                    );
                }
            }

        }
    );
});


function dataSanitizer(
    array $data,
    array $filters,
    string $path = __DIR__. '/..' // Path to Teampass root
): array
{
    // Load Sanitizer library
    require_once $path . '/includes/libraries/Illuminate/Support/Traits/Macroable.php';
    require_once $path . '/includes/libraries/Illuminate/Support/Str.php';
    require_once $path . '/includes/libraries/Illuminate/Validation/ValidationRuleParser.php';
    require_once $path . '/includes/libraries/Illuminate/Support/Arr.php';
    require_once $path . '/includes/libraries/Elegant/sanitizer/Contracts/Filter.php';
    require_once $path . '/includes/libraries/Elegant/sanitizer/Filters/Trim.php';
    require_once $path . '/includes/libraries/Elegant/sanitizer/Filters/Cast.php';
    require_once $path . '/includes/libraries/Elegant/sanitizer/Filters/EscapeHTML.php';
    require_once $path . '/includes/libraries/Elegant/sanitizer/Filters/EmptyStringToNull.php';
    require_once $path . '/includes/libraries/Elegant/sanitizer/Sanitizer.php';

    // Sanitize post and get variables
    $sanitizer = new Elegant\sanitizer\Sanitizer($data, $filters);
    return $sanitizer->sanitize();
}